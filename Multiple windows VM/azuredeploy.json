{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    "domainName": {
            "type": "string",
            "metadata": {
                "description": "The domain name"
            },
            "defaultValue": "contoso.com"
        },    
        "domainAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator of the new VMs and Domain"
            },
            "defaultValue": "lcladmin"
        },

        "domainAdminPassword": {
            "type": "string",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs and Domain"
            },            
            "defaultValue": "p@ssw0rd"
        },        
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
            },
            "defaultValue": "[substring(concat('vm',uniquestring(replace(resourceGroup().Id,'-',''))),0,8)]"
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the VM."
            },
            "defaultValue": "[substring(concat('simplewinvm',resourceGroup().Name),0,12)]"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            },
            "defaultValue": "lcladmin"
        },
        "adminPassword": {
            "type": "string",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs. Default value is subscription id"
            },
            "defaultValue": "p@ssw0rd"
        },        
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2012-R2-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
            }
        },
"numberOfLoadgenSrvs": {
      "type": "int",
      "metadata": {
        "description": "Number of Web Servers"
      },
      "allowedValues": [
        1,
        2
      ],
      "defaultValue": 2
    },        
    "targetVMNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VM network to connect to"
            },
            "defaultValue": "[concat('SQLVNet',resourceGroup().name)]"
        },
      "targetVMNetworkSubnetName": {
          "type": "string",
          "metadata": {
              "description": "Name of the exsisting subnet to connect to"
          },
          "defaultValue": "[concat('SQLSub',resourceGroup().name)]"
      }        
    },
    "variables": {
        "dnsNameForPublicIP": "[replace(replace(tolower(concat('loadgendns',resourceGroup().name)), '-', ''), '.','')]",
        "location": "[resourceGroup().location]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "OSDiskName": "osdisk",
        "nicName": "[replace(replace(tolower(concat('nic',resourceGroup().name)), '-', ''), '.','')]",
        "storageAccountType": "Standard_LRS",
        "vmStorageAccountContainerName": "vhds",
        "vmSize": "Standard_A2",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('targetVMNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('targetVMNetworkSubnetName'))]",
        "networkSecurityGroupName": "[replace(replace(tolower(concat('nsg',resourceGroup().name)), '-', ''), '.','')]",
        "availabilitySetName": "LoadgenAvailabilitySet",
        "consoleJoinDomainTemplate": "[concat(variables('assetLocation'),'/joindomain.json')]",
        "assetLocation": "https://raw.githubusercontent.com/vikasnav/AzureStack-QuickStart-Templates/master/vs2013-tcta"
    },
    "resources": [
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "NetworkSecurityGroup"
            },
            "properties": {
                "securityRules": [
                {
                    "name": "rule1",
                    "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 101,
                        "direction": "Inbound"
                    }
                }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[toLower(parameters('newStorageAccountName'))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
{
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "name": "[variables('dnsNameForPublicIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },        
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfLoadgenSrvs')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('dnsNameForPublicIP'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmName'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('numberOfLoadgenSrvs')]"
            },            
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),copyIndex(),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
        "name": "[concat('consoleJoinDomainDeployment',copyIndex())]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), copyindex())]"
        ],
        "copy": {
        "name": "JoinDomainLoop",
        "count": "[parameters('numberOfLoadgenSrvs')]"
        },  
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[variables('consoleJoinDomainTemplate')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "vmName": { "value": "[concat(parameters('vmName'), copyindex())]" },
                "domainToJoin": { "value": "[parameters('domainName')]" },
                "domainUserName": { "value": "[parameters('domainAdminUsername')]" },
                "domainPassword": {"value": "[parameters('domainAdminPassword')]"}
            }
        }
    }        
    ]
}
